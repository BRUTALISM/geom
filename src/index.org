#+SETUPFILE: setup.org
#+TITLE:          Geometry Kit

* About the project
** Injected properties                                             :noexport:
#+BEGIN_SRC clojure :exports none :noweb-ref version
0.2.0-SNAPSHOT
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref project-url
http://code.thi.ng/geom
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref gen-source-path
target/classes
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb-ref gen-test-path
target/test-classes
#+END_SRC
#+BEGIN_SRC clojure :exports none :noweb yes :noweb-ref cljs-artefact-path
target/geom-<<version>>.js
#+END_SRC

** Description


** License

This project is open source and licensed under the [[http://www.apache.org/licenses/LICENSE-2.0][Apache Software License 2.0]].

** Dependencies
*** Runtime
**** [[https://github.com/clojure/clojure][Clojure]]
#+BEGIN_SRC clojure :noweb-ref dep-clj
[org.clojure/clojure "1.6.0-beta2"]
#+END_SRC
**** [[https://github.com/clojure/clojurescript][ClojureScript]]
#+BEGIN_SRC clojure :noweb-ref dep-cljs
[org.clojure/clojurescript "0.0-2173"]
#+END_SRC
**** thi.ng/common
#+BEGIN_SRC clojure :noweb-ref dep-common
[thi.ng/common "0.1.2-SNAPSHOT"]
#+END_SRC
**** [[https://github.com/thi-ng/macromath][Macromath]]
#+BEGIN_SRC clojure :noweb-ref dep-mmath
[thi.ng/macromath "0.2.1"]
#+END_SRC
*** Development
**** [[https://github.com/lynaghk/cljx][Cljx]]
#+BEGIN_SRC clojure :noweb-ref dep-cljx
[com.keminglabs/cljx "0.3.2"]
#+END_SRC
**** [[https://github.com/emezeske/lein-cljsbuild][Cljsbuild]]
#+BEGIN_SRC clojure :noweb-ref dep-cljsbuild
[lein-cljsbuild "1.0.2"]
#+END_SRC
**** [[https://github.com/hugoduncan/criterium][Criterium]]
#+BEGIN_SRC clojure :noweb-ref dep-criterium
[criterium "0.4.1"]
#+END_SRC
**** [[https://github.com/cemerick/austin][Austin]]
#+BEGIN_SRC clojure :noweb-ref dep-austin
[com.cemerick/austin "0.1.4"]
#+END_SRC
**** [[https://github.com/cemerick/clojurescript.test][clojurescript.test]]
#+BEGIN_SRC clojure :noweb-ref dep-cljs-test
[com.cemerick/clojurescript.test "0.2.2"]
#+END_SRC
** Authors

| [[mailto:k@thi.ng][Karsten Schmidt]] | initiator & principal developer | [[http://thi.ng][thi.ng]]              |
|                 |                                 | [[http://postspectacular.com][postspectacular.com]] |

** Changelog

| *Version* | *Released* | *Description*               |
|-----------+------------+-----------------------------|
|     0.1.0 | 2013-10-01 | initial development release |
|     0.2.0 | 2014-03-07 | 1st public release          |

** Leiningen coordinates
#+BEGIN_SRC clojure :noweb yes :noweb-ref lein-coords
  [thi.ng/geom "<<version>>"]
#+END_SRC

** Leiningen project file                                          :noexport:
#+BEGIN_SRC clojure :tangle ../babel/project.clj :noweb yes :mkdirp yes :padline no
  (defproject thi.ng/geom "<<version>>"
    :description "thing geometry kit"
    :url "<<project-url>>"
    :license {:name "Apache Software License"
              :url "http://www.apache.org/licenses/LICENSE-2.0"}
    :dependencies [<<dep-clj>>
                   <<dep-common>>
                   <<dep-mmath>>]
  
    :source-paths ["src/cljx"]
    :test-paths ["<<gen-test-path>>"]
  
    :profiles {:dev {:dependencies [<<dep-cljs>>
                                    <<dep-criterium>>]
                     :plugins [<<dep-cljx>>
                               <<dep-cljsbuild>>
                               <<dep-cljs-test>>
                               <<dep-austin>>]
                     :hooks [cljx.hooks]
                     :aliases {"cleantest" ["do" "clean," "cljx" "once," "test," "cljsbuild" "test"]}}}
  
    :cljx {:builds [{:source-paths ["src/cljx"]
                     :output-path "<<gen-source-path>>"
                     :rules :clj}
                    {:source-paths ["src/cljx"]
                     :output-path "<<gen-source-path>>"
                     :rules :cljs}
                    {:source-paths ["test/cljx"]
                     :output-path "<<gen-test-path>>"
                     :rules :clj}
                    {:source-paths ["test/cljx"]
                     :output-path "<<gen-test-path>>"
                     :rules :cljs}]}
  
    :cljsbuild {:builds [{:source-paths ["<<gen-source-path>>" "<<gen-test-path>>"]
                          :id "simple"
                          :compiler {:output-to "<<cljs-artefact-path>>"
                                     :optimizations :whitespace
                                     :pretty-print true}}]
                :test-commands {"unit-tests" ["phantomjs" :runner "<<cljs-artefact-path>>"]}})
#+END_SRC

** ClojureScript test harness                                      :noexport:
#+BEGIN_SRC html :tangle ../babel/index.html :noweb yes :mkdirp yes :padline no
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <title><<lein-coords>> test</title>
    </head>
    <body>
      <script type="text/javascript" src="<<cljs-artefact-path>>"></script>
    </body>
  </html>
#+END_SRC

** Accessing library version during runtime

The autogenerated namespace =thi.ng.geom.version= contains a single
symbol =version= holding the version string defined above:

#+BEGIN_SRC clojure :noweb yes
  (use 'thi.ng.geom.version)
  
  (prn version)
  ; "<<version>>"
#+END_SRC
*** Version namespace                                              :noexport:
#+BEGIN_SRC clojure :tangle ../babel/src/cljx/thi/ng/geom/version.cljx :noweb yes :mkdirp yes :padline no
  (ns thi.ng.geom.version)
  (def ^:const version "<<version>>")
#+END_SRC

* Modules

** Core API

#+INCLUDE: "core.org" :minlevel 2

** Geometric entities

#+INCLUDE: "aabb.org" :minlevel 2
#+INCLUDE: "bezier.org" :minlevel 2
#+INCLUDE: "circle.org" :minlevel 2
#+INCLUDE: "gmesh.org" :minlevel 2
#+INCLUDE: "line.org" :minlevel 2
#+INCLUDE: "mesh.org" :minlevel 2
#+INCLUDE: "path.org" :minlevel 2
#+INCLUDE: "plane.org" :minlevel 2
#+INCLUDE: "polygon.org" :minlevel 2
#+INCLUDE: "rect.org" :minlevel 2
#+INCLUDE: "sphere.org" :minlevel 2
#+INCLUDE: "triangle.org" :minlevel 2

** Geometric operations

#+INCLUDE: "delaunay.org" :minlevel 2

** Geometry IO

#+INCLUDE: "meshio.org" :minlevel 2

* Tests

#+INCLUDE: "../test/core.org" :minlevel 2
#+INCLUDE: "../test/protocols.org" :minlevel 2
